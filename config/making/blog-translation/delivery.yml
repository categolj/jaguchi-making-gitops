apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: blog-translation
  labels:
    app.kubernetes.io/part-of: blog-translation
    apps.tanzu.vmware.com/workload-type: web
    kapp.k14s.io/app: "1652458369973999701"
    kapp.k14s.io/association: v1.9480b56dd3dc3c393fbef1f8bc5e1d50
    app.kubernetes.io/component: run
    carto.run/workload-name: blog-translation
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 2.6.7
        conventions.apps.tanzu.vmware.com/applied-conventions: |-
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/spring-boot-actuator-probes
          spring-boot-convention/service-intent-postgres
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        kapp.k14s.io/identity: v1;making/carto.run/Workload/blog-translation;carto.run/v1alpha1
        kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"blog-translation","apps.tanzu.vmware.com/workload-type":"web","kapp.k14s.io/app":"1652458369973999701","kapp.k14s.io/association":"v1.9480b56dd3dc3c393fbef1f8bc5e1d50"},"name":"blog-translation","namespace":"making"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17.*"}]},"env":[{"name":"TRANSLATOR_BLOGAPIURL","value":"http://blog-api.making.svc.cluster.local"},{"name":"TRANSLATOR_GOOGLEAPIKEY","valueFrom":{"secretKeyRef":{"key":"google-api-key","name":"translation-config"}}},{"name":"JAVA_TOOL_OPTIONS","value":"-XX:ReservedCodeCacheSize=32M -Xss512k -Duser.timezone=Asia/Tokyo -Duser.language=ja -Duser.country=JP -Dfile.encoding=UTF-8"},{"name":"SERVER_PORT","value":"${PORT}"},{"name":"BPL_JVM_THREAD_COUNT","value":"28"},{"name":"SPRING_SQL_INIT_MODE","value":"always"},{"name":"SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_SSLFACTORY","value":"org.postgresql.ssl.DefaultJavaSSLFactory"},{"name":"SPRING_PROFILES_ACTIVE","value":"kubernetes"},{"name":"MANAGEMENT_METRICS_EXPORT_WAVEFRONT_ENABLED","value":"false"},{"name":"MANAGEMENT_INFO_ENV_ENABLED","value":"true"},{"name":"MANAGEMENT_INFO_JAVA_ENABLED","value":"true"},{"name":"MANAGEMENT_ENDPOINT_HEAPDUMP_ENABLED","value":"false"},{"name":"MANAGEMENT_ENDPOINT_THREADDUMP_ENABLED","value":"false"},{"name":"MANAGEMENT_METRICS_TAGS_SPRING_BOOT_VERSION","value":"${info.maven.versions.spring-boot}"},{"name":"MANAGEMENT_METRICS_TAGS_JAVA_VERSION","value":"${java.version}"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1","prometheus.io/path":"/actuator/prometheus","prometheus.io/port":"8081","prometheus.io/scrape":"true"}},{"name":"gitops_branch","value":"blog-translation"},{"name":"gitops_commit_message","value":"Bump"},{"name":"gitops_repository","value":"ssh://git@github.com/categolj/jaguchi-making-gitops.git"},{"name":"gitops_user_email","value":"makingx+bot@gmail.com"},{"name":"gitops_user_name","value":"making-bot"},{"name":"gitops_ssh_secret","value":"git-ssh"}],"resources":{"limits":{"memory":"256Mi"},"requests":{"memory":"256Mi"}},"serviceClaims":[{"name":"blog-db","ref":{"apiVersion":"v1","kind":"Secret","name":"blog-db"}},{"name":"blog-db-tls-ca","ref":{"apiVersion":"v1","kind":"Secret","name":"blog-db-tls-ca-bindable"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/categolj/blog-translation"}}}}'
        kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
        services.conventions.apps.tanzu.vmware.com/postgres: postgresql/42.3.4
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: blog-translation
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: blog-translation
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        kapp.k14s.io/app: "1652458369973999701"
        kapp.k14s.io/association: v1.9480b56dd3dc3c393fbef1f8bc5e1d50
        services.conventions.apps.tanzu.vmware.com/postgres: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: blog-translation
    spec:
      containers:
      - env:
        - name: TRANSLATOR_BLOGAPIURL
          value: http://blog-api.making.svc.cluster.local
        - name: TRANSLATOR_GOOGLEAPIKEY
          valueFrom:
            secretKeyRef:
              key: google-api-key
              name: translation-config
        - name: JAVA_TOOL_OPTIONS
          value: -XX:ReservedCodeCacheSize=32M -Xss512k -Dfile.encoding="UTF-8" -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.health.probes.enabled="true" -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s" -Duser.country="JP" -Duser.language="ja" -Duser.timezone="Asia/Tokyo"
        - name: SERVER_PORT
          value: ${PORT}
        - name: BPL_JVM_THREAD_COUNT
          value: "28"
        - name: SPRING_SQL_INIT_MODE
          value: always
        - name: SPRING_DATASOURCE_HIKARI_DATASOURCEPROPERTIES_SSLFACTORY
          value: org.postgresql.ssl.DefaultJavaSSLFactory
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: MANAGEMENT_METRICS_EXPORT_WAVEFRONT_ENABLED
          value: "false"
        - name: MANAGEMENT_INFO_ENV_ENABLED
          value: "true"
        - name: MANAGEMENT_INFO_JAVA_ENABLED
          value: "true"
        - name: MANAGEMENT_ENDPOINT_HEAPDUMP_ENABLED
          value: "false"
        - name: MANAGEMENT_ENDPOINT_THREADDUMP_ENABLED
          value: "false"
        - name: MANAGEMENT_METRICS_TAGS_SPRING_BOOT_VERSION
          value: ${info.maven.versions.spring-boot}
        - name: MANAGEMENT_METRICS_TAGS_JAVA_VERSION
          value: ${java.version}
        image: ghcr.io/jaguchi/blog-translation-making@sha256:4ea1700e2f41801fd1f15d63ce4869ca9aac36d27656fe28d69a7e6809da410f
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
        resources:
          limits:
            memory: 256Mi
          requests:
            memory: 256Mi
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

